{"version":3,"sources":["components/providers.js","components/common/footer.js","components/common/top.js","App.js","serviceWorker.js","index.js"],"names":["Providers","Fragment","style","padding","source","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Footer","classes","className","Top","AppBar","position","Toolbar","noWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yLAGe,SAASA,IAmDtB,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,MAAO,CAACC,QAAS,SACpB,kBAAC,IAAD,CAAeC,OApDV,w/D,+BCAb,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,iBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BC,YAAa,CACXC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CrB,QAASa,EAAMG,QAAQ,EAAG,EAAG,IAE/BM,YAAa,CACXC,UAAWV,EAAMG,QAAQ,IAE3BQ,SAAU,CACRC,WAAYZ,EAAMG,QAAQ,GAC1BU,cAAeb,EAAMG,QAAQ,IAE/BW,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTN,WAAY,UAEdO,YAAa,CACXC,SAAU,GAEZC,OAAQ,CACNhB,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CrB,QAASa,EAAMG,QAAQ,QAIZ,SAASmB,IACtB,IAAMC,EAAUzB,IAChB,OACE,kBAAC,IAAMb,SAAP,KAEE,4BAAQuC,UAAWD,EAAQF,QAYzB,kBAAChC,EAAD,Q,uCC5DFS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BC,YAAa,CACXC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CrB,QAASa,EAAMG,QAAQ,EAAG,EAAG,IAE/BM,YAAa,CACXC,UAAWV,EAAMG,QAAQ,IAE3BQ,SAAU,CACRC,WAAYZ,EAAMG,QAAQ,GAC1BU,cAAeb,EAAMG,QAAQ,IAE/BW,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTN,WAAY,UAEdO,YAAa,CACXC,SAAU,GAEZC,OAAQ,CACNhB,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CrB,QAASa,EAAMG,QAAQ,QAIZ,SAASsB,IACtB,IAAMF,EAAUzB,IAChB,OACE,kBAAC4B,EAAA,EAAD,CAAQC,SAAS,YACb,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAA0BJ,UAAWD,EAAQtB,OAC7C,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUqC,QAAM,GAA/C,yBC7BKC,MAVf,WACE,OACE,yBAAKN,UAAU,OACb,kBAACC,EAAD,MACA,kBAACzC,EAAD,MACA,kBAACsC,EAAD,QCCcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0e53c85b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function Providers() {\n\n  const input = `\n    ### EUA (Emergency Use Authorizations) Channel\n\n    <https://www.fda.gov/media/136663/download>\n    Updated: June 11, 2020\n\n    - 3M Company\n    - AOK Tooling Ltd.\n    - BYD Precision Manufacture Co. Ltd. 比亚迪\n    - Dongguan Arun Industrial Co., LTD 海陆通\n    - ESound Medical Device Co., Ltd. 亿信\n    - Guangzhou Harley Commodity Company Limited 哈雷\n    - Guangzhou Powecom Labor Insurance Supplies Co., LTD 保为康\n    - Jiande Chaomei Daily Chemicals Co. 朝美\n    - Qingdao Miuton Medical Co., Ltd 明药堂\n    - Rizhao Sanqi Medical & Health Articles Co., Ltd 日照三奇\n    - Shanghai Dasheng Health Products Manufacture Company, Ltd. 上海大胜\n    - Weini Technology Development Co., Ltd 威尼科技\n\n    ### Niosh\n\n    - 3M Company\n    - AOK Tooling Ltd.\n    - BYD Precision Manufacture Co. Ltd.\n    - Guangzhou Harley Commodity Company Limited\n    - Rizhao Sanqi Medical & Health Articles Co., Ltd\n    - Shanghai Dasheng Health Products Manufacture Company, Ltd.\n    - Makrite Industries, Inc.\n    - Jinfuyu Industrial Company, Ltd.\n    - Xiantao Zhongyi Safety Protection Products Company, Ltd.\n\n    ### General\n\n    ** not in the Niosh or EUA listed\n\n    - Yuejie (KN95, N95, Disposiable Chidren Mask) 月洁\n    - Xnyee (Disposible Mask, Disposible Children Mask) 心怡医疗\n    - Ruimaishu (KN95) 瑞迈舒\n    - Fengle (Child Disposible Mask) 丰乐医疗\n    - Zhilianbao (Disposible Protective Mask) 智联宝\n    - NutriVsta (Disposible Medical Mask)\n    - RealTone (Disposiable Medial Mask) 通华伟业\n    - Jiutianlv (KN95, Disposiable Medical Mask, Disposible Children Mask) 九天绿\n    - Changzhang (Disposible Children Mask) 常展\n    - Taidakang (KN95, N95) 泰达康\n    - Daddy Baby (KN95) 爹地宝贝\n    - Page (KN95) 佩吉\n    `;\n\n  return (\n    <React.Fragment>\n      <div style={{padding: '20px'}}>\n        <ReactMarkdown source={input}/>\n      </div>\n    </React.Fragment>\n  )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        PPE Wholesale\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        {/* <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography> */}\n        {/* <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Something here to give the footer a purpose!\n        </Typography> */}\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Top() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"relative\">\n        <Toolbar>\n          <SupervisedUserCircleIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            PPE Wholesale &lt;3 US\n          </Typography>\n        </Toolbar>\n      </AppBar>\n  )\n}","import React from 'react';\nimport './App.css';\nimport Providers from './components/providers';\nimport Footer from './components/common/footer';\nimport Top from './components/common/top';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Top />\n      <Providers />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}